[{"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\App.js":"1","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesList.js":"2","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\AddNote.js":"3","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesSelector.js":"4","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesContent.js":"5","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\reportWebVitals.js":"6"},{"size":556,"mtime":1609189289958,"results":"7","hashOfConfig":"8"},{"size":950,"mtime":1609189233761,"results":"9","hashOfConfig":"8"},{"size":1137,"mtime":1608999285291,"results":"10","hashOfConfig":"8"},{"size":590,"mtime":1609021219347,"results":"11","hashOfConfig":"8"},{"size":983,"mtime":1609788939467,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1608843190197,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xpwg9x",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\App.js",[],"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesList.js",["27"],"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\AddNote.js",[],"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesSelector.js",[],"C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\NotesContent.js",["28","29","30"],"import React, {useState,useEffect} from 'react';\r\n\r\n\r\nfunction NotesContent(props) {\r\n    const [content,setContent] = useState('');\r\n    function saveNote(event){\r\n        if (props.activeNote != '')\r\n            {\r\n                setContent(event.target.value);\r\n                localStorage.setItem(props.activeNote,event.target.value);\r\n            }        \r\n        else\r\n            {\r\n                alert(\"No note was selected!\");\r\n            }\r\n    }\r\n    useEffect(() =>{\r\n        if (document.querySelector('.noteInput')!=null){\r\n            setContent(localStorage.getItem(props.activeNote));\r\n        }\r\n        else\r\n        {\r\n            setContent('');\r\n        }\r\n            \r\n    })\r\n    return (\r\n        <div className = 'notesContent'>\r\n            <h1>{props.activeNote}</h1>\r\n            {(props.activeNote !='')&&<textarea className='noteInput' onChange={saveNote} value={content}></textarea>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesContent;\r\n","C:\\Users\\MirrorIce-TerraPower\\projects\\simplenotes\\simplenote-ui\\src\\reportWebVitals.js",[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":24},{"ruleId":"35","severity":1,"message":"36","line":7,"column":30,"nodeType":"37","messageId":"38","endLine":7,"endColumn":32},{"ruleId":"39","severity":1,"message":"40","line":17,"column":5,"nodeType":"33","endLine":17,"endColumn":14,"suggestions":"41"},{"ruleId":"35","severity":1,"message":"36","line":30,"column":32,"nodeType":"37","messageId":"38","endLine":30,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setContent'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.activeNote] as a second argument to the useEffect Hook.",["42"],{"desc":"43","fix":"44"},"Add dependencies array: [props.activeNote]",{"range":"45","text":"46"},[705,705],", [props.activeNote]"]